<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ux_client_script">
    <sys_ux_client_script action="INSERT_OR_UPDATE">
        <includes/>
        <macroponent display_value="Record Page(request)">7c7a5a83b8444210286dec48eaabc94d</macroponent>
        <name>display_value_block_1_items</name>
        <preset/>
        <required_translations>[ {
  "code" : null,
  "message" : "{0}",
  "comment" : ""
} ]</required_translations>
        <script><![CDATA[/**
 * @param {params} params
 * @param {api} params.api
 * @param {TransformApiHelpers} params.helpers
 */
function evaluateProperty({
    api,
    helpers
}) {
    var modelArray = [];
    var modelData = api.data.look_up_record_1.result;
    var table = api.state.table;
    var user = api.context.session.user.fullName;
    var requestedFor = api.data.look_up_record_3.result.requested_for.displayValue;

    function block(label, type, value) {
        var out = {};
        var labelNew =  helpers.translateSync("{0}", label);
        out.label = labelNew;
        var outval = {};
        outval.type = type;
        outval.value = value;
        out.value = outval;
        return out;
    }

    function getDate(item) {
        if (item != undefined && item.displayValue != "" && item.displayValue != null) {
            var itemDate = new Date(item.displayValue);
            item.displayValue = [itemDate.getFullYear(), itemDate.getMonth() + 1, itemDate.getDate()].join('-');;
            return item;
        }
    }

    function addToModel(item, label) {

        if (item != undefined && item.displayValue != "" && item.displayValue != null) {
            modelArray.push(block(label, "string", item.displayValue));
        }
    }
    if (table === 'sc_req_item') {
        addToModel(modelData.state, "State");
        addToModel(modelData.stage, "Stage");
        addToModel(getDate(modelData.due_date), "Due date");
        if (requestedFor != undefined && requestedFor != null && requestedFor != user) {
            modelArray.push(block("Requested for", "string", requestedFor));
        }
        addToModel(modelData.number, "Request number");
        addToModel(modelData.quantity, "Quantity");
        addToModel(modelData.price, "Price");
        var recurringPrice = modelData.recurring_price || {};
        if (recurringPrice.displayValue && recurringPrice.displayValue.substring(1) !== "0.00") {
            modelArray.push(block("Recurring price", "string", recurringPrice.displayValue));
        }
        addToModel(modelData.recurring_frequency, "Recurring frequency");
    } else if (table === 'incident') {
        addToModel(modelData.state, "State");
        addToModel(getDate(modelData.due_date), "Due date");
        addToModel(modelData.number, "Request number");
        addToModel(modelData.caller_id, "Caller");
        addToModel(modelData.urgency, "Urgency");
        addToModel(modelData.cmdb_ci, "Configuration item");
        addToModel(modelData.assigned_to, "Assigned to");
    } else {
        addToModel(modelData.state, "State");
        addToModel(getDate(modelData.due_date), "Due date");
        addToModel(modelData.number, "Request number");
    }

    addToModel(getDate(modelData.sys_created_on), "Creation date");
    addToModel(getDate(modelData.sys_updated_on), "Last update");
    return modelArray;
}]]></script>
        <script_api_version>2.0.0</script_api_version>
        <sys_class_name>sys_ux_client_script</sys_class_name>
        <sys_created_by>system</sys_created_by>
        <sys_created_on>2024-02-03 23:24:16</sys_created_on>
        <sys_id>3c7a5a8375444210f0ae548785f99335</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>display_value_block_1_items</sys_name>
        <sys_package display_value="note taking" source="x_1312925_note_t_0">0b5a457647400210e9ed6d1f316d4312</sys_package>
        <sys_policy/>
        <sys_scope display_value="note taking">0b5a457647400210e9ed6d1f316d4312</sys_scope>
        <sys_update_name>sys_ux_client_script_3c7a5a8375444210f0ae548785f99335</sys_update_name>
        <sys_updated_by>system</sys_updated_by>
        <sys_updated_on>2024-02-03 23:24:16</sys_updated_on>
        <target/>
        <type>transform</type>
    </sys_ux_client_script>
</record_update>
